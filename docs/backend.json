{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user account for the AI Habitual application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "username": {
          "type": "string",
          "description": "The user's username, used for login."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "registrationDate": {
          "type": "string",
          "description": "The date and time when the user registered.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "registrationDate"
      ]
    },
    "Habit": {
      "title": "Habit",
      "description": "Represents a habit that a user is tracking.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "enum": ["daily", "weekly", "monthly"]
        },
        "reminderTime": {
          "type": "string",
          "format": "time"
        },
        "icon": {
          "type": "string"
        },
        "completed_dates": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "required": ["name", "frequency", "icon", "completed_dates"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "google.com"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user account information.  Authorization is based on the path `/users/{userId}`, where `userId` must match `request.auth.uid`.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, corresponding to the Firebase Authentication UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/habits/{habitId}",
        "definition": {
          "entityName": "Habit",
          "schema": {
            "$ref": "#/backend/entities/Habit"
          },
          "description": "Stores habits for a specific user. Authorization ensures that only the user can access their own habits.",
          "params": [
            {
              "name": "userId",
              "description": "The user's UID."
            },
            {
              "name": "habitId",
              "description": "The unique ID for the habit."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to manage user accounts and their habits for the AI Habitual application. The `/users/{userId}` path stores public user profile information, with security rules ensuring that only the authenticated user can modify their own data. The subcollection `/users/{userId}/habits/{habitId}` stores the habits for each user, ensuring data isolation and security. This path-based ownership strategy provides strong security guarantees, simplifies security rules, and enables efficient querying of a user's own habits without complex lookups."
  }
}
